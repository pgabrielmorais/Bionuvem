####################################################
	   Dependência do Maven Spring Security 
####################################################
<dependency>
	<groupId>org.springframework.security</groupId>
	<artifactId>spring-security-core</artifactId>
	<version>4.0.3.RELEASE</version>
</dependency>

####################################################
	 Implementar na parte web a geração do Hash	
####################################################

// Hashes password using bCrypt algorithm
String hashedPassword = BCrypt.hashpw(<senha_da_página>, BCrypt.gensalt(13));

####################################################
		  Implementar no núcleo (UserDao)
####################################################

/**
 *	Check password from database with that came from the application
 *		hashedPassowrd -> from Database
 *		passwordToTest -> from Application
 */
BCrypt.checkpw(passwordToTest, hashedPassword)


Teste do algoritmo bCrypt com complexidade variável:

Configurações da Máquina:
Intel Xeon CPU E5620 @ 2.40GHz 4 núcleos, 8 Threads, Cache L3 12 MB
6.00 GB Memória DDR 2000 MHz
Sistema Operacional Windows 7 Professional 64 bits

Total time for salt complexity [4]: 270
Total time for salt complexity [5]: 11
Total time for salt complexity [6]: 13
Total time for salt complexity [7]: 23
Total time for salt complexity [8]: 46
Total time for salt complexity [9]: 88
Total time for salt complexity [10]: 178
Total time for salt complexity [11]: 354
Total time for salt complexity [12]: 705
Total time for salt complexity [13]: 1422
Total time for salt complexity [14]: 2847
Total time for salt complexity [15]: 5664
Total time for salt complexity [16]: 11417
Total time for salt complexity [17]: 23382
Total time for salt complexity [18]: 46632
Total time for salt complexity [19]: 93076
Total time for salt complexity [20]: 185417
Total time for salt complexity [21]: 373129  -> 6min
Total time for salt complexity [22]: 743862  -> 12min
Total time for salt complexity [23]: 1485600 -> 24min

